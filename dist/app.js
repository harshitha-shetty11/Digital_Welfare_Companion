"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const cors_1 = __importDefault(require("cors"));
const dotenv_1 = __importDefault(require("dotenv"));
const chat_1 = __importDefault(require("./routes/chat"));
const schemes_1 = __importDefault(require("./routes/schemes"));
const database_1 = require("./database");
dotenv_1.default.config();
const app = (0, express_1.default)();
const PORT = process.env.PORT || 3001;
app.use((0, cors_1.default)());
app.use(express_1.default.json());
app.use('/api/chat', chat_1.default);
app.use('/api/schemes', schemes_1.default);
app.get('/health', (req, res) => {
    res.json({ status: 'OK', timestamp: new Date().toISOString() });
});
app.post('/api/test-language', (req, res) => {
    const { language = 'hi', message } = req.body;
    console.log('=== LANGUAGE TEST ===');
    console.log('Received language:', language);
    console.log('Received message:', message);
    console.log('==================');
    const responses = {
        'en': 'Hello! I understand you want to know about welfare schemes. How can I help you?',
        'hi': '‡§®‡§Æ‡§∏‡•ç‡§§‡•á! ‡§Æ‡•à‡§Ç ‡§∏‡§Æ‡§ù ‡§ó‡§Ø‡§æ ‡§ï‡§ø ‡§Ü‡§™ ‡§ï‡§≤‡•ç‡§Ø‡§æ‡§£‡§ï‡§æ‡§∞‡•Ä ‡§Ø‡•ã‡§ú‡§®‡§æ‡§ì‡§Ç ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§ú‡§æ‡§®‡§®‡§æ ‡§ö‡§æ‡§π‡§§‡•á ‡§π‡•à‡§Ç‡•§ ‡§Æ‡•à‡§Ç ‡§Ü‡§™‡§ï‡•Ä ‡§ï‡•à‡§∏‡•á ‡§∏‡§π‡§æ‡§Ø‡§§‡§æ ‡§ï‡§∞ ‡§∏‡§ï‡§§‡§æ ‡§π‡•Ç‡§Ç?',
        'te': '‡∞π‡∞≤‡±ã! ‡∞Æ‡±Ä‡∞∞‡±Å ‡∞∏‡∞Ç‡∞ï‡±ç‡∞∑‡±á‡∞Æ ‡∞™‡∞•‡∞ï‡∞æ‡∞≤ ‡∞ó‡±Å‡∞∞‡∞ø‡∞Ç‡∞ö‡∞ø ‡∞§‡±Ü‡∞≤‡±Å‡∞∏‡±Å‡∞ï‡±ã‡∞µ‡∞æ‡∞≤‡∞®‡∞ø ‡∞Ö‡∞®‡±Å‡∞ï‡±Å‡∞Ç‡∞ü‡±Å‡∞®‡±ç‡∞®‡∞æ‡∞∞‡∞®‡∞ø ‡∞®‡±á‡∞®‡±Å ‡∞Ö‡∞∞‡±ç‡∞•‡∞Ç ‡∞ö‡±á‡∞∏‡±Å‡∞ï‡±Å‡∞®‡±ç‡∞®‡∞æ‡∞®‡±Å. ‡∞®‡±á‡∞®‡±Å ‡∞Æ‡±Ä‡∞ï‡±Å ‡∞é‡∞≤‡∞æ ‡∞∏‡∞π‡∞æ‡∞Ø‡∞Ç ‡∞ö‡±á‡∞Ø‡∞ó‡∞≤‡∞®‡±Å?',
        'ta': '‡Æµ‡Æ£‡Æï‡Øç‡Æï‡ÆÆ‡Øç! ‡Æ®‡ØÄ‡Æô‡Øç‡Æï‡Æ≥‡Øç ‡Æ®‡Æ≤‡Æ§‡Øç‡Æ§‡Æø‡Æü‡Øç‡Æü‡Æô‡Øç‡Æï‡Æ≥‡Øà‡Æ™‡Øç ‡Æ™‡Æ±‡Øç‡Æ±‡Æø ‡ÆÖ‡Æ±‡Æø‡ÆØ ‡Æµ‡Æø‡Æ∞‡ØÅ‡ÆÆ‡Øç‡Æ™‡ØÅ‡Æï‡Æø‡Æ±‡ØÄ‡Æ∞‡Øç‡Æï‡Æ≥‡Øç ‡Æé‡Æ©‡Øç‡Æ±‡ØÅ ‡Æ®‡Ææ‡Æ©‡Øç ‡Æ™‡ØÅ‡Æ∞‡Æø‡Æ®‡Øç‡Æ§‡ØÅ‡Æï‡Øä‡Æ≥‡Øç‡Æï‡Æø‡Æ±‡Øá‡Æ©‡Øç. ‡Æ®‡Ææ‡Æ©‡Øç ‡Æâ‡Æô‡Øç‡Æï‡Æ≥‡ØÅ‡Æï‡Øç‡Æï‡ØÅ ‡Æé‡Æ™‡Øç‡Æ™‡Æü‡Æø ‡Æâ‡Æ§‡Æµ ‡ÆÆ‡ØÅ‡Æü‡Æø‡ÆØ‡ØÅ‡ÆÆ‡Øç?',
        'bn': '‡¶π‡ßç‡¶Ø‡¶æ‡¶≤‡ßã! ‡¶Ü‡¶Æ‡¶ø ‡¶¨‡ßÅ‡¶ù‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶õ‡¶ø ‡¶Ü‡¶™‡¶®‡¶ø ‡¶ï‡¶≤‡ßç‡¶Ø‡¶æ‡¶£ ‡¶™‡ßç‡¶∞‡¶ï‡¶≤‡ßç‡¶™ ‡¶∏‡¶Æ‡ßç‡¶™‡¶∞‡ßç‡¶ï‡ßá ‡¶ú‡¶æ‡¶®‡¶§‡ßá ‡¶ö‡¶æ‡¶®‡•§ ‡¶Ü‡¶Æ‡¶ø ‡¶Ü‡¶™‡¶®‡¶æ‡¶ï‡ßá ‡¶ï‡ßÄ‡¶≠‡¶æ‡¶¨‡ßá ‡¶∏‡¶æ‡¶π‡¶æ‡¶Ø‡ßç‡¶Ø ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶ø?',
        'gu': '‡™π‡´á‡™≤‡´ã! ‡™π‡´Å‡™Ç ‡™∏‡™Æ‡™ú‡´Ä ‡™ó‡™Ø‡´ã ‡™ï‡´á ‡™§‡™Æ‡´á ‡™ï‡™≤‡´ç‡™Ø‡™æ‡™£ ‡™Ø‡´ã‡™ú‡™®‡™æ‡™ì ‡™µ‡™ø‡™∂‡´á ‡™ú‡™æ‡™£‡™µ‡™æ ‡™Æ‡™æ‡™Ç‡™ó‡´ã ‡™õ‡´ã. ‡™π‡´Å‡™Ç ‡™§‡™Æ‡™æ‡™∞‡´Ä ‡™ï‡´á‡™µ‡´Ä ‡™∞‡´Ä‡™§‡´á ‡™Æ‡™¶‡™¶ ‡™ï‡™∞‡´Ä ‡™∂‡™ï‡´Å‡™Ç?',
        'kn': '‡≤π‡≤≤‡≥ã! ‡≤®‡≥Ä‡≤µ‡≥Å ‡≤ï‡≤≤‡≥ç‡≤Ø‡≤æ‡≤£ ‡≤Ø‡≥ã‡≤ú‡≤®‡≥Ü‡≤ó‡≤≥ ‡≤¨‡≤ó‡≥ç‡≤ó‡≥Ü ‡≤§‡≤ø‡≤≥‡≤ø‡≤¶‡≥Å‡≤ï‡≥ä‡≤≥‡≥ç‡≤≥‡≤≤‡≥Å ‡≤¨‡≤Ø‡≤∏‡≥Å‡≤§‡≥ç‡≤§‡≥Ä‡≤∞‡≤ø ‡≤é‡≤Ç‡≤¶‡≥Å ‡≤®‡≤æ‡≤®‡≥Å ‡≤Ö‡≤∞‡≥ç‡≤•‡≤Æ‡≤æ‡≤°‡≤ø‡≤ï‡≥ä‡≤Ç‡≤°‡≤ø‡≤¶‡≥ç‡≤¶‡≥á‡≤®‡≥Ü. ‡≤®‡≤æ‡≤®‡≥Å ‡≤®‡≤ø‡≤Æ‡≤ó‡≥Ü ‡≤π‡≥á‡≤ó‡≥Ü ‡≤∏‡≤π‡≤æ‡≤Ø ‡≤Æ‡≤æ‡≤°‡≤¨‡≤π‡≥Å‡≤¶‡≥Å?',
        'ml': '‡¥π‡¥≤‡µã! ‡¥®‡¥ø‡¥ô‡µç‡¥ô‡µæ ‡¥ï‡µç‡¥∑‡µá‡¥Æ ‡¥™‡¥¶‡µç‡¥ß‡¥§‡¥ø‡¥ï‡¥≥‡µÜ‡¥ï‡µç‡¥ï‡µÅ‡¥±‡¥ø‡¥ö‡µç‡¥ö‡µç ‡¥Ö‡¥±‡¥ø‡¥Ø‡¥æ‡µª ‡¥Ü‡¥ó‡µç‡¥∞‡¥π‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥®‡µç‡¥®‡µÅ‡¥µ‡µÜ‡¥®‡µç‡¥®‡µç ‡¥û‡¥æ‡µª ‡¥Æ‡¥®‡¥∏‡µç‡¥∏‡¥ø‡¥≤‡¥æ‡¥ï‡µç‡¥ï‡µÅ‡¥®‡µç‡¥®‡µÅ. ‡¥é‡¥®‡¥ø‡¥ï‡µç‡¥ï‡µç ‡¥®‡¥ø‡¥ô‡µç‡¥ô‡¥≥‡µÜ ‡¥é‡¥ô‡µç‡¥ô‡¥®‡µÜ ‡¥∏‡¥π‡¥æ‡¥Ø‡¥ø‡¥ï‡µç‡¥ï‡¥æ‡¥®‡¥æ‡¥ï‡µÅ‡¥Ç?',
        'mr': '‡§π‡•Ö‡§≤‡•ã! ‡§§‡•Å‡§Æ‡•ç‡§π‡§æ‡§≤‡§æ ‡§ï‡§≤‡•ç‡§Ø‡§æ‡§£ ‡§Ø‡•ã‡§ú‡§®‡§æ‡§Ç‡§¨‡§¶‡•ç‡§¶‡§≤ ‡§ú‡§æ‡§£‡•Ç‡§® ‡§ò‡•ç‡§Ø‡§æ‡§Ø‡§ö‡•á ‡§Ü‡§π‡•á ‡§π‡•á ‡§Æ‡§≤‡§æ ‡§∏‡§Æ‡§ú‡§≤‡•á. ‡§Æ‡•Ä ‡§§‡•Å‡§Æ‡§ö‡•Ä ‡§ï‡§∂‡•Ä ‡§Æ‡§¶‡§§ ‡§ï‡§∞‡•Ç ‡§∂‡§ï‡§§‡•ã?',
        'or': '‡¨π‡≠á‡¨≤‡≠ã! ‡¨Æ‡≠Å‡¨Å ‡¨¨‡≠Å‡¨ù‡¨ø‡¨™‡¨æ‡¨∞‡≠Å‡¨õ‡¨ø ‡¨Ø‡≠á ‡¨Ü‡¨™‡¨£ ‡¨ï‡¨≤‡≠ç‡≠ü‡¨æ‡¨£ ‡¨Ø‡≠ã‡¨ú‡¨®‡¨æ ‡¨¨‡¨ø‡¨∑‡≠ü‡¨∞‡≠á ‡¨ú‡¨æ‡¨£‡¨ø‡¨¨‡¨æ‡¨ï‡≠Å ‡¨ö‡¨æ‡¨π‡≠Å‡¨Å‡¨õ‡¨®‡≠ç‡¨§‡¨ø‡•§ ‡¨Æ‡≠Å‡¨Å ‡¨Ü‡¨™‡¨£‡¨ô‡≠ç‡¨ï‡≠Å ‡¨ï‡¨ø‡¨™‡¨∞‡¨ø ‡¨∏‡¨æ‡¨π‡¨æ‡¨Ø‡≠ç‡≠ü ‡¨ï‡¨∞‡¨ø‡¨™‡¨æ‡¨∞‡¨ø‡¨¨‡¨ø?',
        'pa': '‡®π‡©à‡®≤‡©ã! ‡®Æ‡©à‡®Ç ‡®∏‡®Æ‡®ù ‡®ó‡®ø‡®Ü ‡®ï‡®ø ‡®§‡©Å‡®∏‡©Ä‡®Ç ‡®ï‡®≤‡®ø‡®Ü‡®£ ‡®Ø‡©ã‡®ú‡®®‡®æ‡®µ‡®æ‡®Ç ‡®¨‡®æ‡®∞‡©á ‡®ú‡®æ‡®£‡®®‡®æ ‡®ö‡®æ‡®π‡©Å‡©∞‡®¶‡©á ‡®π‡©ã‡•§ ‡®Æ‡©à‡®Ç ‡®§‡©Å‡®π‡®æ‡®°‡©Ä ‡®ï‡®ø‡®µ‡©á‡®Ç ‡®Æ‡®¶‡®¶ ‡®ï‡®∞ ‡®∏‡®ï‡®¶‡®æ ‡®π‡®æ‡®Ç?',
        'ur': '€Å€åŸÑŸà! ŸÖ€å⁄∫ ÿ≥ŸÖÿ¨⁄æ ⁄Ø€åÿß ⁄©€Å ÿ¢Ÿæ ŸÅŸÑÿßÿ≠€å ÿßÿ≥⁄©€åŸÖŸà⁄∫ ⁄©€í ÿ®ÿßÿ±€í ŸÖ€å⁄∫ ÿ¨ÿßŸÜŸÜÿß ⁄Üÿß€Åÿ™€í €Å€å⁄∫€î ŸÖ€å⁄∫ ÿ¢Ÿæ ⁄©€å ⁄©€åÿ≥€í ŸÖÿØÿØ ⁄©ÿ± ÿ≥⁄©ÿ™ÿß €ÅŸà⁄∫ÿü'
    };
    const response = responses[language] || responses['hi'];
    res.json({
        response,
        language,
        message: 'Language test successful - response should be in selected language'
    });
});
app.listen(PORT, () => {
    console.log(`üöÄ Server running on port ${PORT}`);
    console.log(`üåê Health check: http://localhost:${PORT}/health`);
});
(0, database_1.connectDB)().then(() => {
    console.log('‚úÖ MongoDB connection established.');
}).catch((error) => {
    console.error('‚ùå MongoDB connection failed:', error);
});
exports.default = app;
//# sourceMappingURL=app.js.map